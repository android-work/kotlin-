关于view的ViewTreeObserver视图树
	介绍：在oncreate中View.getWidth和View.getHeight无法获得一个view的高度和宽度，
	这是因为View组件布局要在onResume回调后完成。OnGlobalLayoutListener 是ViewTreeObserver的内部类，
	当一个视图树的布局发生改变时，可以被ViewTreeObserver监听到，这是一个注册监听视图树的观察者(observer)，
	在视图树的全局事件改变时得到通知。ViewTreeObserver不能直接实例化，
	而是通过getViewTreeObserver()获得。
	
	ViewTreeObserver的内部类
		1、interface ViewTreeObserver.OnGlobalFocusChangeListener
		当在一个视图树中的焦点状态发生改变时，所要调用的回调函数的接口类
		
		2、interface ViewTreeObserver.OnGlobalLayoutListener
		当在一个视图树中全局布局发生改变或者视图树中的某个视图的可视状态发生改变时，所要调用的回调函数的接口类
		注：(但是需要注意的是OnGlobalLayoutListener可能会被多次触发，因此在得到了高度之后，要将OnGlobalLayoutListener注销掉。)
		
		3、interface ViewTreeObserver.OnPreDrawListener
		当一个视图树将要绘制时，所要调用的回调函数的接口类
		
		4、interface ViewTreeObserver.OnScrollChangedListener
		当一个视图树中的一些组件发生滚动时，所要调用的回调函数的接口类

		5、interface ViewTreeObserver.OnTouchModeChangeListener
		当一个视图树的触摸模式发生改变时，所要调用的回调函数的接口类
 
	例：获取一个view的宽高示例
		mHeaderView.getViewTreeObserver().addOnGlobalLayoutListener(
			new OnGlobalLayoutListener() {
				@Override
				public void onGlobalLayout() {
																																																										  
					mHeaderViewHeight = mHeaderView.getHeight();
					getViewTreeObserver()
							.removeGlobalOnLayoutListener(this);
				}
			}); 
			
			

图片处理
	1、图片的总大小 = 图片的总像素 * 每个像素大小
	2、加载图片
		*图片像素过大易造成内存溢出
	3、解决办法
		*先缩放图片，再加载
	4、示例
		*计算缩放比例
			图片宽高：2400 * 3200
			屏幕宽高：320 * 480
			宽度缩放比例：2400 / 320 = 7
			高度缩放比例：3200 / 480 = 6
			宽高缩放比例采用统一值 7  (哪个大用哪个，使之尽可能的缩放到位)
		*缩放方法1 (易失帧，不适用于对图片质量有要求的应用)
			使用BitmapFactory.Options
				Options opts = new Options();
				opts.inJustDecodeBounds = true;(设置true时，BitmapFactory的decodeFile(String path，Options opt)并不会返回一个Bitmap对象，但是会返回图片的宽高大小)
				获取到图片宽高
					int width = opts.outWidth;
					int height = opts.outHeight;
				获取屏幕宽高
					Display dp = getWindowManager().getDefaultDisplay();
					int screenWidth = dp.getWidth();
					int screenHeight = dp.getHeight();
				计算缩放比例
					int scaleWidth = width / screenWidth;
					int scaleHeight = height / screenHeight;
					int scale = Math.max(scaleWidth,scaleHeight);
				设置缩放比例
					opts.inSampleSize = scale;
					opts.inJustDecodeBounds = false;
					Bitmap bm = BitmapFactory.decodeFile("图片路径",opts); (或者其他获取bitmap对象的方法)
					view.setImageBitmap(bm);
					
		*使用软引用进行图片缓存